<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>demoCI</groupId>
    <artifactId>demo-backend-module</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.2.RELEASE</version>
    </parent>
    
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.9.10</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--<properties>-->
        <!--&lt;!&ndash; github server corresponds to entry in ~/.m2/settings.xml &ndash;&gt;-->
        <!--<github.global.server>github</github.global.server>-->
    <!--</properties>-->

    <!--<distributionManagement>-->
        <!--<repository>-->
            <!--<id>internal.repo</id>-->
            <!--<name>Temporary Staging Repository</name>-->
            <!--<url>file://${project.build.directory}/mvn-repo</url>-->
        <!--</repository>-->
    <!--</distributionManagement>-->

    <distributionManagement>
        <repository>
            <id>maven-s3-release-repo</id>
            <name>AWS Release Repository</name>
            <url>s3://maven.linaveo.com/releases</url>
        </repository>
        <snapshotRepository>
            <id>maven-s3-snapshot-repo</id>
            <name>AWS Snapshot Repository</name>
            <url>s3://maven.linaveo.com/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <extensions>
            <extension>
                <groupId>org.springframework.build</groupId>
                <artifactId>aws-maven</artifactId>
                <version>5.0.0.RELEASE</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <!--<configuration>-->
                    <!--<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>-->
                <!--</configuration>-->
            </plugin>
            <!--<plugin>-->
                <!--<groupId>com.github.github</groupId>-->
                <!--<artifactId>site-maven-plugin</artifactId>-->
                <!--<version>0.11</version>-->
                <!--<configuration>-->
                    <!--<message>Maven artifacts for ${project.version}</message>  &lt;!&ndash; git commit message &ndash;&gt;-->
                    <!--<noJekyll>true</noJekyll>                                  &lt;!&ndash; disable webpage processing &ndash;&gt;-->
                    <!--<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> &lt;!&ndash; matches distribution management repository url above &ndash;&gt;-->
                    <!--<branch>refs/heads/master</branch>                       &lt;!&ndash; remote branch name &ndash;&gt;-->
                    <!--<includes><include>**/*</include></includes>-->
                    <!--<repositoryName>mvn-rep</repositoryName>-->
                    <!--<repositoryOwner>Linaveo</repositoryOwner>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--&lt;!&ndash; run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase &ndash;&gt;-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>site</goal>-->
                        <!--</goals>-->
                        <!--<phase>deploy</phase>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>